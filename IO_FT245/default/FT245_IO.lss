
FT245_IO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000012c  000001c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  0080010a  0080010a  000001ca  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000084  00000000  00000000  0000020a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000224  00000000  00000000  0000028e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000185  00000000  00000000  000004b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000017d  00000000  00000000  00000637  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  000007b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000cd  00000000  00000000  00000824  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e2       	ldi	r30, 0x2C	; 44
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 30       	cpi	r26, 0x0B	; 11
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 67 00 	call	0xce	; 0xce <main>
  c6:	0c 94 94 00 	jmp	0x128	; 0x128 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <main>:
#include "FT245.h"

const char num[ ]={'1','2','3','4','5','6','7','8','9'};

int main(void)
{
  ce:	1f 93       	push	r17
	uint8 m;

	DATA_DDR=0xFF;
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	84 bb       	out	0x14, r24	; 20
	OUT_WR();
  d4:	d6 9a       	sbi	0x1a, 6	; 26
  d6:	10 e0       	ldi	r17, 0x00	; 0

	for(m=0;m<100;m++)	
    { 
		write_to_ft245();
  d8:	0e 94 7c 00 	call	0xf8	; 0xf8 <write_to_ft245>
	uint8 m;

	DATA_DDR=0xFF;
	OUT_WR();

	for(m=0;m<100;m++)	
  dc:	1f 5f       	subi	r17, 0xFF	; 255
  de:	14 36       	cpi	r17, 0x64	; 100
  e0:	d9 f7       	brne	.-10     	; 0xd8 <main+0xa>
    { 
		write_to_ft245();
	}
		delay50us(50);
  e2:	82 e3       	ldi	r24, 0x32	; 50
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 7a 00 	call	0xf4	; 0xf4 <delay50us>



	DATA_DDR=0;
  ea:	14 ba       	out	0x14, r1	; 20
    OUT_RD();
  ec:	d7 9a       	sbi	0x1a, 7	; 26
			
    while(1)
    {            
    	read_from_ft245();
  ee:	0e 94 91 00 	call	0x122	; 0x122 <read_from_ft245>
  f2:	fd cf       	rjmp	.-6      	; 0xee <main+0x20>

000000f4 <delay50us>:
{
    uint8 j;		
    for(;t>0;t--)			
        for(j=0;j<70;j++)	
            ;
}
  f4:	08 95       	ret

000000f6 <delay50ms>:
{
	uint16 i; 
	for(;t>0;t--)
		for(i=0;i<52642;i++)
			; 
}
  f6:	08 95       	ret

000000f8 <write_to_ft245>:


void write_to_ft245()
{
    DATA_DDR=0xFF;
  f8:	8f ef       	ldi	r24, 0xFF	; 255
  fa:	84 bb       	out	0x14, r24	; 20

	a++;
  fc:	80 91 0a 01 	lds	r24, 0x010A
 100:	8f 5f       	subi	r24, 0xFF	; 255
 102:	80 93 0a 01 	sts	0x010A, r24
	if(a>=10)
 106:	8a 30       	cpi	r24, 0x0A	; 10
 108:	10 f0       	brcs	.+4      	; 0x10e <write_to_ft245+0x16>
	{
		a=0;
 10a:	10 92 0a 01 	sts	0x010A, r1
	}
	
	
    DATA_PORT=num[a];
 10e:	e0 91 0a 01 	lds	r30, 0x010A
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	e0 50       	subi	r30, 0x00	; 0
 116:	ff 4f       	sbci	r31, 0xFF	; 255
 118:	80 81       	ld	r24, Z
 11a:	85 bb       	out	0x15, r24	; 21
    delay50us(10);
    WR_OFF();
 11c:	de 9a       	sbi	0x1b, 6	; 27
    delay50us(10);
    WR_ON();
 11e:	de 98       	cbi	0x1b, 6	; 27
    delay50us(10);
}
 120:	08 95       	ret

00000122 <read_from_ft245>:


void read_from_ft245()
{
    RD_OFF();
 122:	df 9a       	sbi	0x1b, 7	; 27
    delay50us(10);
    RD_ON();
 124:	df 98       	cbi	0x1b, 7	; 27
    delay50us(10);
}
 126:	08 95       	ret

00000128 <_exit>:
 128:	f8 94       	cli

0000012a <__stop_program>:
 12a:	ff cf       	rjmp	.-2      	; 0x12a <__stop_program>
