
T_C0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000015e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000024  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000b5  00000000  00000000  000001a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000007b  00000000  00000000  00000257  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000b3  00000000  00000000  000002d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000007c  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e0       	ldi	r30, 0x0A	; 10
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  b6:	0c 94 83 00 	jmp	0x106	; 0x106 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <init>:
#define uchar unsigned char 


void init(void)
{
	DDRA=0XFF;
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	8a bb       	out	0x1a, r24	; 26
}
  c2:	08 95       	ret

000000c4 <main>:
#define uchar unsigned char 


void init(void)
{
	DDRA=0XFF;
  c4:	8f ef       	ldi	r24, 0xFF	; 255
  c6:	8a bb       	out	0x1a, r24	; 26
	unsigned long i; 
	init();
//	TCNT0=(256-200);
//	TCCR0=(1<<CS02)|(1<<CS01)|(1<<CS00);//1024 YuFen frequency
//	TCCR0 = (1<<CS00);       //1 frequency
	TCCR0=(1<<CS02)|(1<<CS00);//128 YuFen frequency
  c8:	85 e0       	ldi	r24, 0x05	; 5
  ca:	83 bf       	out	0x33, r24	; 51
  cc:	20 e0       	ldi	r18, 0x00	; 0
  ce:	30 e0       	ldi	r19, 0x00	; 0
  d0:	40 e0       	ldi	r20, 0x00	; 0
  d2:	50 e0       	ldi	r21, 0x00	; 0
	while(1)
	{
		while(!(TIFR&(1<<TOV0)));
		TIFR|=0X01;

		TCNT0=(256-200);
  d4:	98 e3       	ldi	r25, 0x38	; 56
//	TCCR0=(1<<CS02)|(1<<CS01)|(1<<CS00);//1024 YuFen frequency
//	TCCR0 = (1<<CS00);       //1 frequency
	TCCR0=(1<<CS02)|(1<<CS00);//128 YuFen frequency
	while(1)
	{
		while(!(TIFR&(1<<TOV0)));
  d6:	06 b6       	in	r0, 0x36	; 54
  d8:	00 fe       	sbrs	r0, 0
  da:	fd cf       	rjmp	.-6      	; 0xd6 <main+0x12>
		TIFR|=0X01;
  dc:	86 b7       	in	r24, 0x36	; 54
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	86 bf       	out	0x36, r24	; 54

		TCNT0=(256-200);
  e2:	92 bf       	out	0x32, r25	; 50
		i++;
  e4:	2f 5f       	subi	r18, 0xFF	; 255
  e6:	3f 4f       	sbci	r19, 0xFF	; 255
  e8:	4f 4f       	sbci	r20, 0xFF	; 255
  ea:	5f 4f       	sbci	r21, 0xFF	; 255
		if(i==50)
  ec:	22 33       	cpi	r18, 0x32	; 50
  ee:	31 05       	cpc	r19, r1
  f0:	41 05       	cpc	r20, r1
  f2:	51 05       	cpc	r21, r1
  f4:	81 f7       	brne	.-32     	; 0xd6 <main+0x12>
		{
			i=0;
			PORTA=~PORTA;
  f6:	8b b3       	in	r24, 0x1b	; 27
  f8:	80 95       	com	r24
  fa:	8b bb       	out	0x1b, r24	; 27
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	40 e0       	ldi	r20, 0x00	; 0
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	e8 cf       	rjmp	.-48     	; 0xd6 <main+0x12>

00000106 <_exit>:
 106:	f8 94       	cli

00000108 <__stop_program>:
 108:	ff cf       	rjmp	.-2      	; 0x108 <__stop_program>
