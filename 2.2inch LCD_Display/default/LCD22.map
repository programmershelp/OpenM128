Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
LOAD main.o
LOAD LCD_lib.o
LOAD LTM022A69B.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9d4
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000098                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000b2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ba        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x000000ba                __vector_22
                0x000000ba                __vector_28
                0x000000ba                __vector_1
                0x000000ba                __vector_32
                0x000000ba                __vector_34
                0x000000ba                __vector_24
                0x000000ba                __vector_12
                0x000000ba                __bad_interrupt
                0x000000ba                __vector_6
                0x000000ba                __vector_31
                0x000000ba                __vector_3
                0x000000ba                __vector_23
                0x000000ba                __vector_30
                0x000000ba                __vector_25
                0x000000ba                __vector_11
                0x000000ba                __vector_13
                0x000000ba                __vector_17
                0x000000ba                __vector_19
                0x000000ba                __vector_7
                0x000000ba                __vector_27
                0x000000ba                __vector_5
                0x000000ba                __vector_33
                0x000000ba                __vector_4
                0x000000ba                __vector_9
                0x000000ba                __vector_2
                0x000000ba                __vector_21
                0x000000ba                __vector_15
                0x000000ba                __vector_29
                0x000000ba                __vector_8
                0x000000ba                __vector_26
                0x000000ba                __vector_14
                0x000000ba                __vector_10
                0x000000ba                __vector_16
                0x000000ba                __vector_18
                0x000000ba                __vector_20
 .text          0x000000be       0x1c main.o
                0x000000be                main
 .text          0x000000da        0x0 LCD_lib.o
 .text          0x000000da      0x8f6 LTM022A69B.o
                0x000000f2                LCD_WRITE_REG
                0x000005a4                lcd_display_char
                0x000000e8                SPI0_communication
                0x0000014c                lcd_ctrl_port_init
                0x000004b6                lcd_clear_area
                0x000001ec                lcd_init
                0x000006f2                lcd_display_GB2312
                0x0000010c                LCD_WRITE_COMMAND
                0x0000013a                LCD_WRITE_DATA
                0x0000057a                lcd_set_cursor
                0x000008bc                lcd_display_test
                0x00000682                lcd_display_string
                0x000000da                SPI0_Init
                0x00000152                lcd_clear_screen
                0x000007d2                lcd_display_image
 .text          0x000009d0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000009d0                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000009d0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000009d0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009d0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000009d0                exit
                0x000009d0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009d0        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000009d4                _etext = .

.data           0x00800100      0x8f0 load address 0x000009d4
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100      0x8e0 LCD_lib.o
                0x00800100                ascii
                0x00800900                GB2312
 .data          0x008009e0       0x10 LTM022A69B.o
                0x008009e0                color
 .data          0x008009f0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008009f0                . = ALIGN (0x2)
                0x008009f0                _edata = .
                0x008009f0                PROVIDE (__data_end, .)

.bss            0x008009f0        0x0
                0x008009f0                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008009f0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .bss           0x008009f0        0x0 main.o
 .bss           0x008009f0        0x0 LCD_lib.o
 .bss           0x008009f0        0x0 LTM022A69B.o
 .bss           0x008009f0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x008009f0                PROVIDE (__bss_end, .)
                0x000009d4                __data_load_start = LOADADDR (.data)
                0x000012c4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008009f0        0x0
                0x008009f0                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008009f0                PROVIDE (__noinit_end, .)
                0x008009f0                _end = .
                0x008009f0                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 LTM022A69B.o

.debug_pubnames
                0x00000000      0x18b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b       0x27 LCD_lib.o
 .debug_pubnames
                0x00000042      0x149 LTM022A69B.o

.debug_info     0x00000000      0xa9f
 *(.debug_info)
 .debug_info    0x00000000      0x106 main.o
 .debug_info    0x00000106       0x85 LCD_lib.o
 .debug_info    0x0000018b      0x914 LTM022A69B.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x333
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x9f main.o
 .debug_abbrev  0x0000009f       0x5b LCD_lib.o
 .debug_abbrev  0x000000fa      0x239 LTM022A69B.o

.debug_line     0x00000000      0xaad
 *(.debug_line)
 .debug_line    0x00000000      0x11b main.o
 .debug_line    0x0000011b       0x4e LCD_lib.o
 .debug_line    0x00000169      0x944 LTM022A69B.o

.debug_frame    0x00000000      0x120
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020      0x100 LTM022A69B.o

.debug_str      0x00000000      0x272
 *(.debug_str)
 .debug_str     0x00000000       0xcd main.o
                                0x101 (size before relaxing)
 .debug_str     0x000000cd       0x13 LCD_lib.o
                                 0x70 (size before relaxing)
 .debug_str     0x000000e0      0x192 LTM022A69B.o
                                0x291 (size before relaxing)

.debug_loc      0x00000000      0x6c8
 *(.debug_loc)
 .debug_loc     0x00000000       0x18 main.o
 .debug_loc     0x00000018      0x6b0 LTM022A69B.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(LCD22.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x78
 .debug_ranges  0x00000000       0x78 LTM022A69B.o
